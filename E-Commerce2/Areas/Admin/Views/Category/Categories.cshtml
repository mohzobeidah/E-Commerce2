
@{
    ViewData["Title"] = "Categories";

}

    <h1>Categories</h1>


<div class="card">
    <div class="card-header">
        <h3 class="card-title">Control Panel for  Categories </h3>
        <button type="button" class="btn btn-primary" style="float:right;   " data-toggle="modal" data-target="#modal-default">
            Add new Category
        </button>

    </div>


    <!-- /.card-header -->
    <div class="card-body">
        <table id="example1" class="table table-bordered table-striped">
            <thead>
                <tr>
                    <th>#</th>
                    <th>Arabic Name</th>
                    <th>English Name</th>
                    <th>French Name</th>
                    <th>Insert Date</th>
                    <th>Insert User</th>
                    <th>Is Deleted</th>
                </tr>
            </thead>
            <tbody>
                
    
            </tbody>
           
        </table>
    </div>
    <!-- /.card-body -->
</div>


<!-- /.modal -->

<partial name="_Add" />

<!-- /.modal -->
@section ScriptsLinks {

    <script src="~/lib/jquery/jquery.unobtrusive-ajax.js"></script>
}

    @section Scripts {


        <script src="~/AdminLTE-3.0.2/dist/js/demo.js"></script>
        <!-- page script -->
        <script>

            completed = function (response) {
                var result = response.responseJSON
                console.log(response.responseJSON)
                $.toast({
                    heading: result.color,
                    text: result.msg,
                    showHideTransition: 'slide',
                    icon: result.color
                })
                    ;

                clearForm("#addCategory");
            };

            failureAdd = function (jqXHR, status) {
                $.toast({
                    heading: 'Error',
                    text: 'Uncaught Error.\n' + jqXHR.responseText,
                    showHideTransition: 'fade',
                    icon: 'error'
                })
            };

            //completed = function (xhr) {
            //    alert(`Hi ${xhr.responseText}!`);
            //};
            $(function () {
                var table = $("#example1");


                    $(document).ready(function () {

                        // $("#MyDataTable").DataTable();

                        BindDataTable();
                    })
                    $('#SearchName').click(function () {
                        BindDataTable.ajax.reload();

                    });
                    var BindDataTable = function (response) {

                        table.DataTable({
                            "destroy": true,
                            "bServerSide": true,
                            "sSearch": "Search all columns:",
                            "sAjaxSource": "/ADMIN/Category/GetCategoriesAjax",
                            "aaSorting": [[0, "desc"]],
                            "processing": "true",
                            // Internationalisation. For more info refer to http://datatables.net/manual/i18n
                        
                            aoData: {
                                "data": function (d) {
                                    return $.extend({}, d, RefrechParam([
                                        //{ paramId: 'job', inputId: 'job' },
                                        //{ paramId: 'FullName', inputId: 'FullName' },
                                        //{ paramId: 'User_ID', inputId: 'hdnUserID_Search' }
                                    ]));
                                },
                            },
                            "fnServerData": function (sSource, aoData, fnCallback) {

                                $.ajax({

                                    type: "POST",
                                    data: aoData,
                                    url: sSource,
                                    success: fnCallback
                                })

                            },
                            "aoColumns": [
                                {
                                    data: null, render: function (data, type, row, iDisplayIndex) {
                                        return (iDisplayIndex.row + 1);

                                    }

                                },
                                { data: "arabicName" },
                                { data: "englishName" },
                                { data: "frenchName" },
                                {
                                    data: null, render: function (data, type, row) {
                                        console.log(data.insertDate)
                                        if (data.insertDate == 'null' || data.insertDate == null)
                                            return "";

                                        var date = new Date(data.insertDate);
                                        return  moment(data.insertDate).format("DD-MM-YYYY hh:m");
                                    }
                                },
                                { data: "insertUser" },
                                { data: "isDelete" },

                            ], "rowCallback": function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {


                            }, "drawCallback": function (settings) {

                                //if (typeof DrawCallbackFunction === "function") {
                                //    DrawCallbackFunction();

                                //}


                            },

                        });


                    }




               
            });
        </script>
    }